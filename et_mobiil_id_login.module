<?php
/**
 * @file
 */

function et_mobiil_id_login_init() {
  drupal_add_css(drupal_get_path('module', 'et_mobiil_id_login') . '/mobiil_id.css');
  drupal_add_js(drupal_get_path('module', 'et_mobiil_id_login') . '/mobiil_id.js');
}

/**
 * Implementation of hook_menu().
 *
 * @return array menu items
 */
function et_mobiil_id_login_menu() {
  $items = array();

  $items['admin/config/people/mobiil_id'] = array(
    'title' => 'Mobiil-ID',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('et_mobiil_id_login_admin_form'),
    'description' => 'Configure Mobiil-ID settings',
    'access arguments' => array('administer mobiil_id'),
    'type' => MENU_CALLBACK,
  );
  
  $items['mobiil_id_status'] = array(
    'title' => 'Mobiil-ID status',
    'page callback' => 'et_mobiil_id_login_status',
    'description' => 'Get Mobiil-ID status',
    'access callback' => 'user_is_anonymous',
    'type' => MENU_CALLBACK,
  );

  $items['mobiil_id_login'] = array(
    'title' => 'Mobiil-ID login',
    'page callback' => 'et_mobiil_id_login_login_page',
    'description' => 'Mobiil-ID login page',
    'access callback' => 'user_is_anonymous',
    'type' => MENU_CALLBACK,
  );
  
  $items['user/%user/mobiil_id'] = array(
    'title' => 'Mobiil-ID',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('et_mobiil_id_login_user_form', 1),
    // @TODO: This also gives access to user himself, so he can change his ID code, which might not be a good idea
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
  );

	return $items;
}

/**
 * Implementation of hook_block_info().
 *
 * @return array
 */
 function et_mobiil_id_login_block_info() {
  $blocks['mobiil_id'] = array(
    'info' => t('Mobiil-ID login'), 
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implementation of hook_block_view().
 *
 * @return array
 */
function et_mobiil_id_login_block_view($delta = '') {
  $block = array();

  if ($delta == 'mobiil_id') {
    $block['subject'] = t('Mobiil-ID login');
    $block['content'] = drupal_get_form('et_mobiil_id_login_login_form');
  }
  
  return $block;
}

/**
 * Global settings form for mobiil_id module
 *
 * @return array form
 */
function et_mobiil_id_login_admin_form($form) {
  $form['mobiil_id']['mobiil_id_server'] = array(
    '#type' => 'textfield',
    '#title' => t('Authentication server'),
    '#description' => t('Mobiil-ID authentication server. https://www.openxades.org:8443/?wsdl can be used for testing purposes.'),
    '#default_value' => variable_get('mobiil_id_server', 'https://www.openxades.org:8443/?wsdl'),
  );

  $form['mobiil_id']['mobiil_id_service_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Service name'),
    '#description' => t('Name of your Mobiil-ID service. For test server you can use the service name "Testimine". To register your own service visit the web site of !name at !url.', array('!name' => 'AS Sertifitseerimiskeskus', '!url' => l('http://www.sk.ee', 'http://www.sk.ee'))),
    '#default_value' => variable_get('mobiil_id_service_name', 'Testimine'),
  );  

  // @TODO: Add possibility to assign by different site languages
  $form['mobiil_id']['mobiil_id_language'] = array(
    '#type' => 'select',
    '#title' => t('Language'),
    '#description' => t('Language of the message sent to users phone when authenticating.'),
    '#default_value' => variable_get('mobiil_id_language', 'EST'),
    '#options' => array('EST' => 'EST', 'ENG' => 'ENG', 'RUS' => 'RUS'),
  );

  // @TODO: Add possibility to assign by different site languages
  $form['mobiil_id']['mobiil_id_message'] = array(
    '#type' => 'textfield',
    '#title' => t('Message'),
    '#description' => t('Additional message sent to users phone when authenticating. Can be left empty since the Mobiil-ID service sends a message anyway. Maximum length of the message is 40 characters.'),
    '#default_value' => variable_get('mobiil_id_message', ''),
    '#maxlength' => 40,
  );

  $form['mobiil_id']['mobiil_id_create_new_user'] = array(
    '#type' => 'checkbox',
    '#title' => t('Create new user on first login'),
    '#description' => t('If checked, a new user is created when it doesn\'t exist yet. Leave unchecked to deny Mobiil-ID access for unknown users.'),
    '#default_value' => variable_get('mobiil_id_create_new_user', '1'),
  );

  $form['mobiil_id']['mobiil_id_alter_user_login_form'] = array(
    '#type' => 'checkbox',
    '#title' => t('Attach to default user login form'),
    '#description' => t('Alters the default Drupal user login form and adds a button to log in with Mobiil-ID.'),
    '#default_value' => variable_get('mobiil_id_alter_user_login_form', '0'),
  );  

  // @TODO: Setting default role/group for new users

  return system_settings_form($form);
}

/**
 * The form to set the users Estonian ID code to use with Mobiil-ID
 *
 * @return array form
 */
function et_mobiil_id_login_user_form($form, $form_state, $user_info) {
  if ($user_info) {
    // @TODO: Not sure if there's a function for this, getting authname (in this case the Estonian ID code) by user id
    $authname = db_query("SELECT authname FROM {authmap} WHERE uid = :uid AND module = :module",
        array(
          ':uid' => $user_info->uid,
          ':module' => 'id_card',
        )
      )->fetchField();
  } else {
    $authname = '';
  }

  $form['mobiil_id']['mobiil_id_user_id_code'] = array(
    '#type' => 'textfield',
    '#title' => t('ID code'),
    '#description' => t('Estonian ID code of the user. Warning - user might not be able to log in using Mobiil-ID anymore if changed. Leave empty to disable Mobiil-ID access for the user.'),
    '#default_value' => $authname,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
    '#submit' => array('mobiil_id_user_form_submit'),
  );
  
  $form['mobiil_id_uid'] = array(
    '#type' => 'value',
    '#value' => $user_info->uid,
  );

  return $form;
}

/**
 * Saves the users Estonian ID code to use with Mobiil-ID
 */
function et_mobiil_id_login_user_form_submit($form, $form_state) {
  $user_info = user_load($form_state['values']['mobiil_id_uid']);
  user_set_authmaps($user_info, array('authname_mobiil_id' => $form_state['values']['mobiil_id_user_id_code']));
}

// @TODO: Help hook for the module

/**
 * Implements hook_form_FORM_ID_alter().
 */
function et_mobiil_id_login_form_user_login_block_alter(&$form, &$form_state) {
  if (variable_get('mobiil_id_alter_user_login_form', '0')) {
    // @TODO: For some reason, needed to add this to make it work, but there's probably a better way
    $form['#action'] = url('mobiil_id_login');
    _mobiil_id_user_login_form_alter($form, $form_state);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function et_mobiil_id_login_form_user_login_alter(&$form, &$form_state) {
  _mobiil_id_user_login_form_alter($form, $form_state);
}

/**
 * Alters the use form to add Mobiil-ID login support
 */
function _mobiil_id_user_login_form_alter(&$form, &$form_state) {
  if (variable_get('mobiil_id_alter_user_login_form', '0')) {

    if (!empty($form_state['input']['mobiil_id_phone_number'])) {
      $form['name']['#required'] = FALSE;
      $form['pass']['#required'] = FALSE;
      $form['#submit'] = array('et_mobiil_id_login_login_submit');
      unset($form['#validate']);
    }

    $items = array();
    $items[] = array(
      'data' => '<a href="#">' . t('Log in using Mobiil-ID') . '</a>',
      'class' => array('mobiil-id-link'),
    );
    $items[] = array(
      'data' => '<a href="#">' . t('Cancel Mobiil-ID login') . '</a>',
      'class' => array('mobiil-id-cancel-link'),
    );

    /*$form['mobiil_id'] = array(
      '#type' => 'fieldset',
      '#id' => 'mobiil-id-login-wrapper',
      '#attributes' => array('class' => array('mobiil-id-fieldset')),
    );*/

    $form['mobiil_id']['mobiil_id_links'] = array(
      '#theme' => 'item_list',
      '#items' => $items,
      '#attributes' => array('class' => array('mobiil-id-links')),
      '#weight' => 1,
    );

		// Move "Create new account" and "Request new password" links down in order
    $form['links']['#weight'] = 2;

    $form['mobiil_id']['mobiil_id_phone_number'] = array(
      '#type' => 'textfield',
      '#title' => t('Insert your phone number to log in'),
      '#size' => 20,
      '#maxlength' => 255,
      '#weight' => -1,
      '#description' => l(t('What is Mobiil-ID?'), 'http://mobiil.id.ee/', array('external' => TRUE)),
    );
    // Couldn't get this working, since there's no javascript callback option to start the query_status() js function
    /*  
    $form['actions']['submit']['#ajax'] = array(
      'callback' => 'mobiil_id_login_callback',
      'method' => 'replace',
      //'wrapper' => 'mobiil-id-login-wrapper',
      'wrapper' => 'user-login-form',
      'effect' => 'fade',
    );
    */
  }
}

/*
 * Separate login form that is used in Mobiil-ID block
 */
function et_mobiil_id_login_login_form($form, $form_state) {
  global $user;

  $form = array();
  
  if (!$user->uid) {
    $form['#action'] = url('mobiil_id_login');
    $form['#submit'] = array('mobiil_id_login_submit');

    $form['mobiil_id']['mobiil_id_phone_number'] = array(
      '#type' => 'textfield',
      '#title' => t('Insert your phone number'),
      '#size' => 20,
      '#maxlength' => 255,
      '#weight' => -1,
      '#description' => l(t('What is Mobiil-ID?'), 'http://mobiil.id.ee/', array('external' => TRUE)),
    );

    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Log in'),
    );
  }
  
  return $form;
}

/**
 * Return the json encoded status of login and logs user into Drupal if successful, must be called with AJAX
 */
function et_mobiil_id_login_status() {
  drupal_add_http_header('Content-Type', 'application/javascript');
  
	if ($_SESSION['mobiil_id']['sesscode']) {

		$client = new SoapClient(
			variable_get('mobiil_id_server', 'https://www.openxades.org:8443/?wsdl'),
			array(
        'trace' => true,
				'exceptions' => false
      )
		);

		$status_param = array(	
			'Sesscode' => $_SESSION['mobiil_id']['sesscode'],
			'WaitSignature' => FALSE,
		);

		$status_result = $client->__soapCall('GetMobileAuthenticateStatus', $status_param);

		if (@$status_result['Status'] == 'USER_AUTHENTICATED') {
			$_SESSION['mobiil_id']['logged_in'] = true;
      
      if (variable_get('mobiil_id_create_new_user', '1')) {
        user_external_login_register($_SESSION['mobiil_id']['idcode'], 'id_card');
      } else {
        $user_info = user_external_load($_SESSION['mobiil_id']['idcode'], 'id_card');
        // Creation of new users is disabled, so check if it exists
        if ($user_info) {
          global $user;
          $user = $user_info;
          user_login_finalize();
        } else {
          print drupal_json_encode(array('error' => 'Access denied!'));
          unset($_SESSION['mobiil_id']);
          return;
        }
      }
      // @TODO: Also save user first and last name:
      //  'field_firstname' => $_SESSION['mobiil_id']['firstname'],
      //  'field_lastname' => $_SESSION['mobiil_id']['lastname'],
      unset($_SESSION['mobiil_id']);
		}

		print drupal_json_encode($status_result);
	} else {
		print drupal_json_encode(array('error' => 'Session error!'));
	}
}

/**
 * Submits the phone number to Mobiil-ID service and saves the response into mobiil_id session
 */
function et_mobiil_id_login_login_submit($form, &$form_state) {
  $phone_nr = $form['mobiil_id']['mobiil_id_phone_number']['#value'];
  
  trim($phone_nr);
  if (substr($phone_nr, 1) != '+') {
    // Add the estonian area code to the phone number, if not entered
    $phone_nr = '+372' . $phone_nr;
  }

  $client = new SoapClient(
    variable_get('mobiil_id_server', 'https://www.openxades.org:8443/?wsdl'),
    array(
      'trace' => true,
      'exceptions' => false,
    )
  );

  $param = array(	
    'IDCode' => '',
    'Country' => '',
    'PhoneNo' => $phone_nr,
    'Language' => variable_get('mobiil_id_language', 'EST'),
    'ServiceName' => variable_get('mobiil_id_service_name', 'Testimine'),
    'MessageToDisplay' => variable_get('mobiil_id_message', ''),
    'SPChallenge' => '12345678901234567890',
    'MessagingMode' => "asynchClientServer",
  );

  $result = $client->__soapCall("MobileAuthenticate", $param);

  if (is_soap_fault($result)) {
    $_SESSION['mobiil_id'] = array();
    // Commented it out since the message is not displayed
    // $_SESSION['mobiil_id']['message'] = $result->detail->message;
    $_SESSION['mobiil_id']['faultstring'] = $result->faultstring;
    $_SESSION['mobiil_id']['status'] = false;
  } elseif ($result['Status'] == 'OK') {
    $_SESSION['mobiil_id'] = array();
    $_SESSION['mobiil_id']['status'] = true;
    $_SESSION['mobiil_id']['challengeid'] = $result['ChallengeID'];
    $_SESSION['mobiil_id']['sesscode'] = $result['Sesscode'];
    $_SESSION['mobiil_id']['idcode'] = $result['UserIDCode'];
    $_SESSION['mobiil_id']['firstname'] = $result['UserGivenname'];
    $_SESSION['mobiil_id']['lastname'] = $result['UserSurname'];
    $_SESSION['mobiil_id']['country'] = $result['UserCountry'];
  }

  drupal_goto('mobiil_id_login');
}

/**
 * Outputs the login page with instuctions or error in case Mobiil-ID service failed
 * (ie. wrong or non-registered Mobiil-ID phone number)
 * 
 * @return string description
 */
function et_mobiil_id_login_login_page() {
  $GLOBALS['conf']['cache'] = FALSE;

  if (@$_SESSION['mobiil_id']['status']) {
    drupal_add_js(drupal_get_path('module', 'et_mobiil_id_login') . '/status.js');

    // @TODO: Make a template file for this
    return '<div class="mobiil-id-instructions">' . t('Follow the instructions on your phone. Before entering your PIN code make sure the verification code given here matches the one on your phone screen. After successful login you will be automatically redirected to the next page.') . '</div>
      <div class="mobiil-id-status-wrapper">
        <div class="mobiil-id-verification-code">' . t('Verification code: !challenge', array('!challenge' => $_SESSION['mobiil_id']['challengeid'])) . '</div>
        <div class="mobiil-id-outstanding-transaction">
          <div class="mobiil-id-progress-bar"></div>
        </div>
        <div class="mobiil-id-result"></div>
      </div>';
  } else {
    $mobiil_id_errors = array(
      100 => t('Error in Mobiil-ID service. Please contact the site administrator for further details.'),
      101 => t('One of the required input parameters is faulty. Please contact the site administrator for further details.'),
      102 => t('One of the required input parameters is missing. Please contact the site administrator for further details.'),
      103 => t('This site has no access to Mobiil-ID service. Please contact the site administrator for further details.'),
      200 => t('Error in Mobiil-ID service. Please try again.'),
      201 => t('Your certificate was not found.'),
      202 => t('Unable to verify the validity of your certificate.'),
      300 => t('Phone related error. Please try again or contact your service provider for further details.'),
      301 => t('The inserted phone number doesn\'t have a valid Mobiil-ID contract.'),
      302 => t('Your certificate is not valid.'),
      303 => t('Mobiil-ID service has not been activate for your phone number. To activate the service visit !link', array('!link' => l('http://mobiil.id.ee', 'http://mobiil.id.ee'))),
    );

    $error_message = '';
    if (array_key_exists($_SESSION['mobiil_id']['faultstring'], $mobiil_id_errors)) {
      $error_message = $mobiil_id_errors[$_SESSION['mobiil_id']['faultstring']];
    } else {
      // Unknown/undocumented error
      $error_message = t('Unknown error in Mobiil-ID service. Please try again.');
    }

    return '<div class="mobiil-id-error">' . $error_message . '</div>';
  }
}

// @TODO: This seems like a hack, maybe there's a better way to hide the block on certain pages
function et_mobiil_id_login_block_view_alter(&$data, $block) {
  // Hide the default user login block on et_mobiil_id_login_login page
  if ($block->module == 'user' && $block->delta == 'login' && $_GET['q'] == 'mobiil_id_login') {
    $data = array();
  }

  global $user;
  
  if (($block->module == 'mobiil_id' && $block->delta == 'mobiil_id') && ($_GET['q'] == 'id_card_login' || $_GET['q'] == 'mobiil_id_login' || $user->uid)) {
    $data = array();
  }
  
}